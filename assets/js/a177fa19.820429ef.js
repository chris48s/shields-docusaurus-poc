"use strict";(self.webpackChunkshields_docusaurus_poc=self.webpackChunkshields_docusaurus_poc||[]).push([[10247],{603905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var l=a(667294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},o=Object.keys(e);for(l=0;l<o.length;l++)a=o[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)a=o[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=l.createContext({}),p=function(e){var t=l.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=p(e.components);return l.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},g=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(a),g=n,m=c["".concat(i,".").concat(g)]||c[g]||u[g]||o;return a?l.createElement(m,r(r({ref:t},d),{},{components:a})):l.createElement(m,r({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=g;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:n,r[1]=s;for(var p=2;p<o;p++)r[p]=a[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,a)}g.displayName="MDXCreateElement"},757521:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var l=a(487462),n=(a(667294),a(603905));const o={},r="Azure DevOps tests with custom labels",s={type:"api",id:"azure-dev-ops-tests-with-custom-labels",unversionedId:"azure-dev-ops-tests-with-custom-labels",title:"Azure DevOps tests with custom labels",description:"",slug:"/azure-dev-ops-tests-with-custom-labels",frontMatter:{},api:{description:'\n<p>\n  To obtain your own badge, you need to get 3 pieces of information:\n  <code>ORGANIZATION</code>, <code>PROJECT</code> and <code>DEFINITION_ID</code>.\n</p>\n<p>\n  First, you need to select your build definition and look at the url:\n</p>\n<img\n  src="https://user-images.githubusercontent.com/3749820/47259976-e2d9ec80-d4b2-11e8-92cc-7c81089a7a2c.png"\n  alt="ORGANIZATION is after the dev.azure.com part, PROJECT is right after that, DEFINITION_ID is at the end after the id= part." />\n<p>\n  Your badge will then have the form:\n  <code>https://img.shields.io/azure-devops/tests/ORGANIZATION/PROJECT/DEFINITION_ID.svg</code>.\n</p>\n<p>\n  Optionally, you can specify a named branch:\n  <code>https://img.shields.io/azure-devops/tests/ORGANIZATION/PROJECT/DEFINITION_ID/NAMED_BRANCH.svg</code>.\n</p>\n\n<p>\n  You may change the "passed", "failed" and "skipped" text on this badge by supplying query parameters <code>&passed_label=</code>, <code>&failed_label=</code> and <code>&skipped_label=</code> respectively.\n</p>\n\n<p>\n  For example, if you want to use a different terminology:\n  <br />\n  <code>?passed_label=good&failed_label=bad&skipped_label=n%2Fa</code>\n</p>\n\n<p>\n  Or symbols:\n  <br />\n  <code>?compact_message&passed_label=\ud83d\udc83&failed_label=\ud83e\udd26\u200d\u2640\ufe0f&skipped_label=\ud83e\udd37</code>\n</p>\n\n<p>\n  There is also a <code>&compact_message</code> query parameter, which will default to displaying \u2714, \u2718 and \u279f, separated by a horizontal bar |.\n</p>\n\n',parameters:[{name:"organization",in:"path",required:!0,schema:{type:"string"},example:"azuredevops-powershell"},{name:"project",in:"path",required:!0,schema:{type:"string"},example:"azuredevops-powershell"},{name:"definitionId",in:"path",required:!0,schema:{type:"string"},example:"1"},{name:"branch",in:"path",required:!0,schema:{type:"string"},example:"master"},{name:"passed_label",in:"query",required:!1,schema:{type:"string"},example:"passed"},{name:"failed_label",in:"query",required:!1,schema:{type:"string"},example:"failed"},{name:"skipped_label",in:"query",required:!1,schema:{type:"string"},example:"skipped"},{name:"compact_message",in:"query",required:!1,schema:{type:"boolean"},allowEmptyValue:!0,example:null},{name:"style",in:"query",required:!1,description:"One of: flat (default), flat-square, plastic, for-the-badge, social",schema:{type:"string"},example:"flat"},{name:"logo",in:"query",required:!1,description:'One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or <a href="https://simpleicons.org/" rel="noopener noreferrer" target="_blank">simple-icons</a>. Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the <a href="https://github.com/simple-icons/simple-icons/blob/develop/slugs.md" rel="noopener noreferrer" target="_blank">slugs.md</a> file in the simple-icons repository.',schema:{type:"string"},example:"appveyor"},{name:"logoColor",in:"query",required:!1,description:"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.",schema:{type:"string"},example:"violet"},{name:"label",in:"query",required:!1,description:'Override the default left-hand-side text (<a href="https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding">URL-Encoding</a> needed for spaces or special characters!)',schema:{type:"string"},example:"healthiness"},{name:"labelColor",in:"query",required:!1,description:'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.',schema:{type:"string"},example:"abcdef"},{name:"color",in:"query",required:!1,description:'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.',schema:{type:"string"},example:"fedcba"},{name:"cacheSeconds",in:"query",required:!1,description:'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.',schema:{type:"string"},example:"3600"},{name:"link",in:"query",required:!1,description:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",style:"form",explode:!0,schema:{type:"array",maxItems:2,items:{type:"string"}}}],"x-code-samples":[{lang:"URL",label:"URL",source:"$url"},{lang:"Markdown",label:"Markdown",source:"![Azure DevOps tests with custom labels]($url)"},{lang:"reStructuredText",label:"rSt",source:".. image:: $url\n:   alt: Azure DevOps tests with custom labels"},{lang:"AsciiDoc",label:"AsciiDoc",source:"image:$url[Azure DevOps tests with custom labels]"},{lang:"HTML",label:"HTML",source:'<img alt="Azure DevOps tests with custom labels" src="$url">'}],method:"get",path:"/azure-devops/tests/{organization}/{project}/{definitionId}/{branch}",servers:[{url:"https://img.shields.io"}],info:{version:"1.0.0",title:"Test Results",license:{name:"CC0"}},postman:{name:"Azure DevOps tests with custom labels",description:{content:'\n<p>\n  To obtain your own badge, you need to get 3 pieces of information:\n  <code>ORGANIZATION</code>, <code>PROJECT</code> and <code>DEFINITION_ID</code>.\n</p>\n<p>\n  First, you need to select your build definition and look at the url:\n</p>\n<img\n  src="https://user-images.githubusercontent.com/3749820/47259976-e2d9ec80-d4b2-11e8-92cc-7c81089a7a2c.png"\n  alt="ORGANIZATION is after the dev.azure.com part, PROJECT is right after that, DEFINITION_ID is at the end after the id= part." />\n<p>\n  Your badge will then have the form:\n  <code>https://img.shields.io/azure-devops/tests/ORGANIZATION/PROJECT/DEFINITION_ID.svg</code>.\n</p>\n<p>\n  Optionally, you can specify a named branch:\n  <code>https://img.shields.io/azure-devops/tests/ORGANIZATION/PROJECT/DEFINITION_ID/NAMED_BRANCH.svg</code>.\n</p>\n\n<p>\n  You may change the "passed", "failed" and "skipped" text on this badge by supplying query parameters <code>&passed_label=</code>, <code>&failed_label=</code> and <code>&skipped_label=</code> respectively.\n</p>\n\n<p>\n  For example, if you want to use a different terminology:\n  <br />\n  <code>?passed_label=good&failed_label=bad&skipped_label=n%2Fa</code>\n</p>\n\n<p>\n  Or symbols:\n  <br />\n  <code>?compact_message&passed_label=\ud83d\udc83&failed_label=\ud83e\udd26\u200d\u2640\ufe0f&skipped_label=\ud83e\udd37</code>\n</p>\n\n<p>\n  There is also a <code>&compact_message</code> query parameter, which will default to displaying \u2714, \u2718 and \u279f, separated by a horizontal bar |.\n</p>\n\n',type:"text/plain"},url:{path:["azure-devops","tests",":organization",":project",":definitionId",":branch"],host:["{{baseUrl}}"],query:[{description:{content:"",type:"text/plain"},key:"passed_label",value:"<string>"},{description:{content:"",type:"text/plain"},key:"failed_label",value:"<string>"},{description:{content:"",type:"text/plain"},key:"skipped_label",value:"<string>"},{description:{content:"",type:"text/plain"},key:"compact_message",value:"<boolean>"},{description:{content:"One of: flat (default), flat-square, plastic, for-the-badge, social",type:"text/plain"},key:"style",value:"<string>"},{description:{content:'One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or <a href="https://simpleicons.org/" rel="noopener noreferrer" target="_blank">simple-icons</a>. Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the <a href="https://github.com/simple-icons/simple-icons/blob/develop/slugs.md" rel="noopener noreferrer" target="_blank">slugs.md</a> file in the simple-icons repository.',type:"text/plain"},key:"logo",value:"<string>"},{description:{content:"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.",type:"text/plain"},key:"logoColor",value:"<string>"},{description:{content:'Override the default left-hand-side text (<a href="https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding">URL-Encoding</a> needed for spaces or special characters!)',type:"text/plain"},key:"label",value:"<string>"},{description:{content:'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.',type:"text/plain"},key:"labelColor",value:"<string>"},{description:{content:'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.',type:"text/plain"},key:"color",value:"<string>"},{description:{content:'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.',type:"text/plain"},key:"cacheSeconds",value:"<string>"},{description:{content:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",type:"text/plain"},key:"link",value:"<string>"},{description:{content:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",type:"text/plain"},key:"link",value:"<string>"}],variable:[{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"organization"},{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"project"},{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"definitionId"},{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"branch"}]},method:"GET"}},source:"@site/categories/test-results.yaml",sourceDirName:".",permalink:"/shields-docusaurus-poc/badges/azure-dev-ops-tests-with-custom-labels",previous:{title:"AppVeyor tests (branch)",permalink:"/shields-docusaurus-poc/badges/app-veyor-tests-branch"},next:{title:"Azure DevOps tests with custom labels",permalink:"/shields-docusaurus-poc/badges/azure-dev-ops-tests-with-custom-labels-1"}},i=[],p={toc:i};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"azure-devops-tests-with-custom-labels"},"Azure DevOps tests with custom labels"),(0,n.kt)("p",null,"To obtain your own badge, you need to get 3 pieces of information:",(0,n.kt)("code",null,"ORGANIZATION"),", ",(0,n.kt)("code",null,"PROJECT")," and ",(0,n.kt)("code",null,"DEFINITION_ID"),"."),(0,n.kt)("p",null,"First, you need to select your build definition and look at the url:"),(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/3749820/47259976-e2d9ec80-d4b2-11e8-92cc-7c81089a7a2c.png",alt:"ORGANIZATION is after the dev.azure.com part, PROJECT is right after that, DEFINITION_ID is at the end after the id= part."}),(0,n.kt)("p",null,"Your badge will then have the form:",(0,n.kt)("code",null,"https://img.shields.io/azure-devops/tests/ORGANIZATION/PROJECT/DEFINITION_ID.svg"),"."),(0,n.kt)("p",null,"Optionally, you can specify a named branch:",(0,n.kt)("code",null,"https://img.shields.io/azure-devops/tests/ORGANIZATION/PROJECT/DEFINITION_ID/NAMED_BRANCH.svg"),"."),(0,n.kt)("p",null,'You may change the "passed", "failed" and "skipped" text on this badge by supplying query parameters ',(0,n.kt)("code",null,"&passed_label="),", ",(0,n.kt)("code",null,"&failed_label=")," and ",(0,n.kt)("code",null,"&skipped_label=")," respectively."),(0,n.kt)("p",null,"For example, if you want to use a different terminology:",(0,n.kt)("br",null),(0,n.kt)("code",null,"?passed_label=good&failed_label=bad&skipped_label=n%2Fa")),(0,n.kt)("p",null,"Or symbols:",(0,n.kt)("br",null),(0,n.kt)("code",null,"?compact_message&passed_label=\ud83d\udc83&failed_label=\ud83e\udd26\u200d\u2640\ufe0f&skipped_label=\ud83e\udd37")),(0,n.kt)("p",null,"There is also a ",(0,n.kt)("code",null,"&compact_message")," query parameter, which will default to displaying \u2714, \u2718 and \u279f, separated by a horizontal bar |."),(0,n.kt)("table",{style:{display:"table",width:"100%"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"organization"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: azuredevops-powershell"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"project"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: azuredevops-powershell"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"definitionId"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 1"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"branch"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: master"))))),(0,n.kt)("table",{style:{display:"table",width:"100%"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"passed_label"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: passed"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"failed_label"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: failed"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"skipped_label"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: skipped"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"compact_message"),(0,n.kt)("span",{style:{opacity:"0.6"}}," boolean"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"style"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"One of: flat (default), flat-square, plastic, for-the-badge, social")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: flat"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"logo"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or ",(0,n.kt)("a",{href:"https://simpleicons.org/",rel:"noopener noreferrer",target:"_blank"},"simple-icons"),". Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the ",(0,n.kt)("a",{href:"https://github.com/simple-icons/simple-icons/blob/develop/slugs.md",rel:"noopener noreferrer",target:"_blank"},"slugs.md")," file in the simple-icons repository.")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: appveyor"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"logoColor"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: violet"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"label"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"Override the default left-hand-side text (",(0,n.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding"},"URL-Encoding")," needed for spaces or special characters!)")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: healthiness"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"labelColor"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.')),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: abcdef"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"color"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.')),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: fedcba"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"cacheSeconds"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.')),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 3600"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"link"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an ",(0,n.kt)("inlineCode",{parentName:"p"},"<object>")," HTML tag, but not an ",(0,n.kt)("inlineCode",{parentName:"p"},"<img>")," tag or a markup language.")))))))}d.isMDXComponent=!0}}]);