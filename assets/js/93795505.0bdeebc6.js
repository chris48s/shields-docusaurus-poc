"use strict";(self.webpackChunkshields_docusaurus_poc=self.webpackChunkshields_docusaurus_poc||[]).push([[23292],{603905:(e,t,l)=>{l.d(t,{Zo:()=>p,kt:()=>g});var a=l(667294);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(l),h=n,g=u["".concat(s,".").concat(h)]||u[h]||c[h]||r;return l?a.createElement(g,i(i({ref:t},p),{},{components:l})):a.createElement(g,i({ref:t},p))}));function g(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=l.length,i=new Array(r);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var d=2;d<r;d++)i[d]=l[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,l)}h.displayName="MDXCreateElement"},7774:(e,t,l)=>{l.r(t),l.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=l(487462),n=(l(667294),l(603905));const r={},i="W3C Validation",o={type:"api",id:"w-3-c-validation",unversionedId:"w-3-c-validation",title:"W3C Validation",description:"",slug:"/w-3-c-validation",frontMatter:{},api:{description:'\n  \n  <p>\n    The W3C validation badge performs validation of the HTML, SVG, MathML, ITS, RDFa Lite, XHTML documents.\n    The badge uses the type property of each message found in the messages from the validation results to determine to be an error or warning.\n    The rules are as follows:\n    <ul class="note">\n      <li>info:  These messages are counted as warnings</li>\n      <li>error:  These messages are counted as errors</li>\n      <li>non-document-error: These messages are counted as errors</li>\n    </ul>\n  </p>\n  <p>\n    This badge relies on the <a target="_blank" href="https://validator.nu/">https://validator.nu/</a> service to perform the validation.\n    Please refer to <a target="_blank" href="https://about.validator.nu/">https://about.validator.nu/</a> for the full documentation and Terms of service.\n    The following are required from the consumer for the badge to function.\n    <ul class="note">\n      <li>\n        Path:\n        <ul>\n          <li>\n            parser: The parser that is used for validation. This is a passthru value to the service\n            <ul>\n              <li>default <i>(This will not pass a parser to the API and make the API choose the parser based on the validated content)</i></li>\n              <li>html <i>(HTML)</i></li>\n              <li>xml <i>(XML; don\u2019t load external entities)</i></li>\n              <li>xmldtd <i>(XML; load external entities)</i></li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li>\n        Query string:\n        <ul>\n          <li>\n            targetUrl (Required): This is the path for the document to be validated\n          </li>\n          <li>\n            preset (Optional can be left as blank): This is used to determine the schema for the document to be valdiated against.\n            The following are the allowed values\n            <ul>\n              <li>HTML, SVG 1.1, MathML 3.0</li>\n              <li>HTML, SVG 1.1, MathML 3.0, ITS 2.0</li>\n              <li>HTML, SVG 1.1, MathML 3.0, RDFa Lite 1.1</li>\n              <li>HTML 4.01 Strict, URL / XHTML 1.0 Strict, URL</li>\n              <li>HTML 4.01 Transitional, URL / XHTML 1.0 Transitional, URL</li>\n              <li>HTML 4.01 Frameset, URL / XHTML 1.0 Frameset, URL</li>\n              <li>XHTML, SVG 1.1, MathML 3.0</li>\n              <li>XHTML, SVG 1.1, MathML 3.0, RDFa Lite 1.1</li>\n              <li>XHTML 1.0 Strict, URL, Ruby, SVG 1.1, MathML 3.0</li>\n              <li>SVG 1.1, URL, XHTML, MathML 3.0</li>        \n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </p>\n',parameters:[{name:"parser",in:"path",required:!0,schema:{type:"string",enum:["default","html","xml","xmldtd"]},example:"html"},{name:"targetUrl",in:"query",required:!1,schema:{type:"string"},example:"https://validator.nu/"},{name:"preset",in:"query",required:!1,schema:{type:"string"},example:"HTML, SVG 1.1, MathML 3.0"},{name:"style",in:"query",required:!1,description:"One of: flat (default), flat-square, plastic, for-the-badge, social",schema:{type:"string"},example:"flat"},{name:"logo",in:"query",required:!1,description:'One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or <a href="https://simpleicons.org/" rel="noopener noreferrer" target="_blank">simple-icons</a>. Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the <a href="https://github.com/simple-icons/simple-icons/blob/develop/slugs.md" rel="noopener noreferrer" target="_blank">slugs.md</a> file in the simple-icons repository.',schema:{type:"string"},example:"appveyor"},{name:"logoColor",in:"query",required:!1,description:"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.",schema:{type:"string"},example:"violet"},{name:"label",in:"query",required:!1,description:'Override the default left-hand-side text (<a href="https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding">URL-Encoding</a> needed for spaces or special characters!)',schema:{type:"string"},example:"healthiness"},{name:"labelColor",in:"query",required:!1,description:'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.',schema:{type:"string"},example:"abcdef"},{name:"color",in:"query",required:!1,description:'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.',schema:{type:"string"},example:"fedcba"},{name:"cacheSeconds",in:"query",required:!1,description:'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.',schema:{type:"string"},example:"3600"},{name:"link",in:"query",required:!1,description:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",style:"form",explode:!0,schema:{type:"array",maxItems:2,items:{type:"string"}}}],"x-code-samples":[{lang:"URL",label:"URL",source:"$url"},{lang:"Markdown",label:"Markdown",source:"![W3C Validation]($url)"},{lang:"reStructuredText",label:"rSt",source:".. image:: $url\n:   alt: W3C Validation"},{lang:"AsciiDoc",label:"AsciiDoc",source:"image:$url[W3C Validation]"},{lang:"HTML",label:"HTML",source:'<img alt="W3C Validation" src="$url">'}],method:"get",path:"/w3c-validation/{parser}",servers:[{url:"https://img.shields.io"}],info:{version:"1.0.0",title:"Analysis",license:{name:"CC0"}},postman:{name:"W3C Validation",description:{content:'\n  \n  <p>\n    The W3C validation badge performs validation of the HTML, SVG, MathML, ITS, RDFa Lite, XHTML documents.\n    The badge uses the type property of each message found in the messages from the validation results to determine to be an error or warning.\n    The rules are as follows:\n    <ul class="note">\n      <li>info:  These messages are counted as warnings</li>\n      <li>error:  These messages are counted as errors</li>\n      <li>non-document-error: These messages are counted as errors</li>\n    </ul>\n  </p>\n  <p>\n    This badge relies on the <a target="_blank" href="https://validator.nu/">https://validator.nu/</a> service to perform the validation.\n    Please refer to <a target="_blank" href="https://about.validator.nu/">https://about.validator.nu/</a> for the full documentation and Terms of service.\n    The following are required from the consumer for the badge to function.\n    <ul class="note">\n      <li>\n        Path:\n        <ul>\n          <li>\n            parser: The parser that is used for validation. This is a passthru value to the service\n            <ul>\n              <li>default <i>(This will not pass a parser to the API and make the API choose the parser based on the validated content)</i></li>\n              <li>html <i>(HTML)</i></li>\n              <li>xml <i>(XML; don\u2019t load external entities)</i></li>\n              <li>xmldtd <i>(XML; load external entities)</i></li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li>\n        Query string:\n        <ul>\n          <li>\n            targetUrl (Required): This is the path for the document to be validated\n          </li>\n          <li>\n            preset (Optional can be left as blank): This is used to determine the schema for the document to be valdiated against.\n            The following are the allowed values\n            <ul>\n              <li>HTML, SVG 1.1, MathML 3.0</li>\n              <li>HTML, SVG 1.1, MathML 3.0, ITS 2.0</li>\n              <li>HTML, SVG 1.1, MathML 3.0, RDFa Lite 1.1</li>\n              <li>HTML 4.01 Strict, URL / XHTML 1.0 Strict, URL</li>\n              <li>HTML 4.01 Transitional, URL / XHTML 1.0 Transitional, URL</li>\n              <li>HTML 4.01 Frameset, URL / XHTML 1.0 Frameset, URL</li>\n              <li>XHTML, SVG 1.1, MathML 3.0</li>\n              <li>XHTML, SVG 1.1, MathML 3.0, RDFa Lite 1.1</li>\n              <li>XHTML 1.0 Strict, URL, Ruby, SVG 1.1, MathML 3.0</li>\n              <li>SVG 1.1, URL, XHTML, MathML 3.0</li>        \n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </p>\n',type:"text/plain"},url:{path:["w3c-validation",":parser"],host:["{{baseUrl}}"],query:[{description:{content:"",type:"text/plain"},key:"targetUrl",value:"<string>"},{description:{content:"",type:"text/plain"},key:"preset",value:"<string>"},{description:{content:"One of: flat (default), flat-square, plastic, for-the-badge, social",type:"text/plain"},key:"style",value:"<string>"},{description:{content:'One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or <a href="https://simpleicons.org/" rel="noopener noreferrer" target="_blank">simple-icons</a>. Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the <a href="https://github.com/simple-icons/simple-icons/blob/develop/slugs.md" rel="noopener noreferrer" target="_blank">slugs.md</a> file in the simple-icons repository.',type:"text/plain"},key:"logo",value:"<string>"},{description:{content:"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.",type:"text/plain"},key:"logoColor",value:"<string>"},{description:{content:'Override the default left-hand-side text (<a href="https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding">URL-Encoding</a> needed for spaces or special characters!)',type:"text/plain"},key:"label",value:"<string>"},{description:{content:'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.',type:"text/plain"},key:"labelColor",value:"<string>"},{description:{content:'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.',type:"text/plain"},key:"color",value:"<string>"},{description:{content:'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.',type:"text/plain"},key:"cacheSeconds",value:"<string>"},{description:{content:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",type:"text/plain"},key:"link",value:"<string>"},{description:{content:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",type:"text/plain"},key:"link",value:"<string>"}],variable:[{description:{content:"(Required) ",type:"text/plain"},type:"any",value:"<string>",key:"parser"}]},method:"GET"}},source:"@site/categories/analysis.yaml",sourceDirName:".",permalink:"/shields-docusaurus-poc/badges/w-3-c-validation",previous:{title:"SymfonyInsight Violations",permalink:"/shields-docusaurus-poc/badges/symfony-insight-violations"},next:{title:"AppVeyor",permalink:"/shields-docusaurus-poc/badges/app-veyor"}},s=[],d={toc:s};function p(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"w3c-validation"},"W3C Validation"),(0,n.kt)("p",null,"The W3C validation badge performs validation of the HTML, SVG, MathML, ITS, RDFa Lite, XHTML documents. The badge uses the type property of each message found in the messages from the validation results to determine to be an error or warning. The rules are as follows:",(0,n.kt)("ul",{class:"note"},(0,n.kt)("li",null,"info:  These messages are counted as warnings"),(0,n.kt)("li",null,"error:  These messages are counted as errors"),(0,n.kt)("li",null,"non-document-error: These messages are counted as errors"))),(0,n.kt)("p",null,"This badge relies on the ",(0,n.kt)("a",{target:"_blank",href:"https://validator.nu/"},"https://validator.nu/")," service to perform the validation. Please refer to ",(0,n.kt)("a",{target:"_blank",href:"https://about.validator.nu/"},"https://about.validator.nu/")," for the full documentation and Terms of service. The following are required from the consumer for the badge to function.",(0,n.kt)("ul",{class:"note"},(0,n.kt)("li",null,"Path:",(0,n.kt)("ul",null,(0,n.kt)("li",null,"parser: The parser that is used for validation. This is a passthru value to the service",(0,n.kt)("ul",null,(0,n.kt)("li",null,"default ",(0,n.kt)("i",null,"(This will not pass a parser to the API and make the API choose the parser based on the validated content)")),(0,n.kt)("li",null,"html ",(0,n.kt)("i",null,"(HTML)")),(0,n.kt)("li",null,"xml ",(0,n.kt)("i",null,"(XML; don\u2019t load external entities)")),(0,n.kt)("li",null,"xmldtd ",(0,n.kt)("i",null,"(XML; load external entities)")))))),(0,n.kt)("li",null,"Query string:",(0,n.kt)("ul",null,(0,n.kt)("li",null,"targetUrl (Required): This is the path for the document to be validated"),(0,n.kt)("li",null,"preset (Optional can be left as blank): This is used to determine the schema for the document to be valdiated against. The following are the allowed values",(0,n.kt)("ul",null,(0,n.kt)("li",null,"HTML, SVG 1.1, MathML 3.0"),(0,n.kt)("li",null,"HTML, SVG 1.1, MathML 3.0, ITS 2.0"),(0,n.kt)("li",null,"HTML, SVG 1.1, MathML 3.0, RDFa Lite 1.1"),(0,n.kt)("li",null,"HTML 4.01 Strict, URL / XHTML 1.0 Strict, URL"),(0,n.kt)("li",null,"HTML 4.01 Transitional, URL / XHTML 1.0 Transitional, URL"),(0,n.kt)("li",null,"HTML 4.01 Frameset, URL / XHTML 1.0 Frameset, URL"),(0,n.kt)("li",null,"XHTML, SVG 1.1, MathML 3.0"),(0,n.kt)("li",null,"XHTML, SVG 1.1, MathML 3.0, RDFa Lite 1.1"),(0,n.kt)("li",null,"XHTML 1.0 Strict, URL, Ruby, SVG 1.1, MathML 3.0"),(0,n.kt)("li",null,"SVG 1.1, URL, XHTML, MathML 3.0"))))))),(0,n.kt)("table",{style:{display:"table",width:"100%"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",{style:{textAlign:"left"}},"Path Parameters"))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"parser"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,n.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Possible values:")," ","[",(0,n.kt)("inlineCode",{parentName:"p"},"default"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"html"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"xml"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"xmldtd"),"]")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: html"))))),(0,n.kt)("table",{style:{display:"table",width:"100%"}},(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"targetUrl"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: https://validator.nu/"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"preset"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: HTML, SVG 1.1, MathML 3.0"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"style"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"One of: flat (default), flat-square, plastic, for-the-badge, social")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: flat"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"logo"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or ",(0,n.kt)("a",{href:"https://simpleicons.org/",rel:"noopener noreferrer",target:"_blank"},"simple-icons"),". Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the ",(0,n.kt)("a",{href:"https://github.com/simple-icons/simple-icons/blob/develop/slugs.md",rel:"noopener noreferrer",target:"_blank"},"slugs.md")," file in the simple-icons repository.")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: appveyor"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"logoColor"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: violet"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"label"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"Override the default left-hand-side text (",(0,n.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding"},"URL-Encoding")," needed for spaces or special characters!)")),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: healthiness"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"labelColor"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.')),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: abcdef"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"color"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.')),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: fedcba"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"cacheSeconds"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.')),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 3600"))),(0,n.kt)("tr",null,(0,n.kt)("td",null,(0,n.kt)("code",null,"link"),(0,n.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,n.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,n.kt)("p",null,"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an ",(0,n.kt)("inlineCode",{parentName:"p"},"<object>")," HTML tag, but not an ",(0,n.kt)("inlineCode",{parentName:"p"},"<img>")," tag or a markup language.")))))))}p.isMDXComponent=!0}}]);