"use strict";(self.webpackChunkshields_docusaurus_poc=self.webpackChunkshields_docusaurus_poc||[]).push([[55609],{603905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=s(n),h=r,g=p["".concat(i,".").concat(h)]||p[h]||u[h]||l;return n?o.createElement(g,a(a({ref:t},c),{},{components:n})):o.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=h;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d[p]="string"==typeof e?e:r,a[1]=d;for(var s=2;s<l;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},374326:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>d,toc:()=>i});var o=n(487462),r=(n(667294),n(603905));const l={},a="Endpoint Badge",d={type:"api",id:"endpoint-badge",unversionedId:"endpoint-badge",title:"Endpoint Badge",description:"",slug:"/endpoint-badge",frontMatter:{},api:{description:'<p>\n  Using the endpoint badge, you can provide content for a badge through\n  a JSON endpoint. The content can be prerendered, or generated on the\n  fly. To strike a balance between responsiveness and bandwidth\n  utilization on one hand, and freshness on the other, cache behavior is\n  configurable, subject to the Shields minimum. The endpoint URL is\n  provided to Shields through the query string. Shields fetches it and\n  formats the badge.\n</p>\n<p>\n  The endpoint badge takes a single required query param: <code>url</code>, which is the URL to your JSON endpoint\n</p>\n<div>\n  <h2>Example JSON Endpoint Response</h2>\n  <code>&#123; "schemaVersion": 1, "label": "hello", "message": "sweet world", "color": "orange" &#125;</code>\n  <h2>Example Shields Response</h2>\n  <img src="https://img.shields.io/badge/hello-sweet_world-orange" />\n</div>\n<div>\n  <h2>Schema</h2>\n  <table>\n    <tbody>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n      <tr>\n        <td><code>schemaVersion</code></td>\n        <td>Required. Always the number <code>1</code>.</td>\n      </tr>\n      <tr>\n        <td><code>label</code></td>\n        <td>\n          Required. The left text, or the empty string to omit the left side of\n          the badge. This can be overridden by the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>message</code></td>\n        <td>Required. Can\'t be empty. The right text.</td>\n      </tr>\n      <tr>\n        <td><code>color</code></td>\n        <td>\n          Default: <code>lightgrey</code>. The right color. Supports the eight\n          named colors above, as well as hex, rgb, rgba, hsl, hsla and css named\n          colors. This can be overridden by the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>labelColor</code></td>\n        <td>\n          Default: <code>grey</code>. The left color. This can be overridden by\n          the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>isError</code></td>\n        <td>\n          Default: <code>false</code>. <code>true</code> to treat this as an\n          error badge. This prevents the user from overriding the color. In the\n          future, it may affect cache behavior.\n        </td>\n      </tr>\n      <tr>\n        <td><code>namedLogo</code></td>\n        <td>\n          Default: none. One of the named logos supported by Shields or\n          <a href="https://simpleicons.org/">simple-icons</a>. Can be overridden\n          by the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>logoSvg</code></td>\n        <td>Default: none. An SVG string containing a custom logo.</td>\n      </tr>\n      <tr>\n        <td><code>logoColor</code></td>\n        <td>\n          Default: none. Same meaning as the query string. Can be overridden by\n          the query string. Only works for named logos and Shields logos. If you\n          override the color of a multicolor Shield logo, the corresponding\n          named logo will be used and colored.\n        </td>\n      </tr>\n      <tr>\n        <td><code>logoWidth</code></td>\n        <td>\n          Default: none. Same meaning as the query string. Can be overridden by\n          the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>logoPosition</code></td>\n        <td>\n          Default: none. Same meaning as the query string. Can be overridden by\n          the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>style</code></td>\n        <td>\n          Default: <code>flat</code>. The default template to use. Can be\n          overridden by the query string.\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>',parameters:[{name:"url",description:"The URL to your JSON endpoint",in:"query",required:!0,schema:{type:"string"},example:"https://shields.redsparr0w.com/2473/monday"},{name:"style",in:"query",required:!1,description:"One of: flat (default), flat-square, plastic, for-the-badge, social",schema:{type:"string"},example:"flat"},{name:"logo",in:"query",required:!1,description:'One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or <a href="https://simpleicons.org/" rel="noopener noreferrer" target="_blank">simple-icons</a>. Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the <a href="https://github.com/simple-icons/simple-icons/blob/develop/slugs.md" rel="noopener noreferrer" target="_blank">slugs.md</a> file in the simple-icons repository.',schema:{type:"string"},example:"appveyor"},{name:"logoColor",in:"query",required:!1,description:"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.",schema:{type:"string"},example:"violet"},{name:"label",in:"query",required:!1,description:'Override the default left-hand-side text (<a href="https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding">URL-Encoding</a> needed for spaces or special characters!)',schema:{type:"string"},example:"healthiness"},{name:"labelColor",in:"query",required:!1,description:'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.',schema:{type:"string"},example:"abcdef"},{name:"color",in:"query",required:!1,description:'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.',schema:{type:"string"},example:"fedcba"},{name:"cacheSeconds",in:"query",required:!1,description:'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.',schema:{type:"string"},example:"3600"},{name:"link",in:"query",required:!1,description:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",style:"form",explode:!0,schema:{type:"array",maxItems:2,items:{type:"string"}}}],"x-code-samples":[{lang:"URL",label:"URL",source:"$url"},{lang:"Markdown",label:"Markdown",source:"![Endpoint Badge]($url)"},{lang:"reStructuredText",label:"rSt",source:".. image:: $url\n:   alt: Endpoint Badge"},{lang:"AsciiDoc",label:"AsciiDoc",source:"image:$url[Endpoint Badge]"},{lang:"HTML",label:"HTML",source:'<img alt="Endpoint Badge" src="$url">'}],method:"get",path:"/endpoint",servers:[{url:"https://img.shields.io"}],info:{version:"1.0.0",title:"Core",license:{name:"CC0"}},postman:{name:"Endpoint Badge",description:{content:'<p>\n  Using the endpoint badge, you can provide content for a badge through\n  a JSON endpoint. The content can be prerendered, or generated on the\n  fly. To strike a balance between responsiveness and bandwidth\n  utilization on one hand, and freshness on the other, cache behavior is\n  configurable, subject to the Shields minimum. The endpoint URL is\n  provided to Shields through the query string. Shields fetches it and\n  formats the badge.\n</p>\n<p>\n  The endpoint badge takes a single required query param: <code>url</code>, which is the URL to your JSON endpoint\n</p>\n<div>\n  <h2>Example JSON Endpoint Response</h2>\n  <code>&#123; "schemaVersion": 1, "label": "hello", "message": "sweet world", "color": "orange" &#125;</code>\n  <h2>Example Shields Response</h2>\n  <img src="https://img.shields.io/badge/hello-sweet_world-orange" />\n</div>\n<div>\n  <h2>Schema</h2>\n  <table>\n    <tbody>\n      <tr>\n        <th>Property</th>\n        <th>Description</th>\n      </tr>\n      <tr>\n        <td><code>schemaVersion</code></td>\n        <td>Required. Always the number <code>1</code>.</td>\n      </tr>\n      <tr>\n        <td><code>label</code></td>\n        <td>\n          Required. The left text, or the empty string to omit the left side of\n          the badge. This can be overridden by the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>message</code></td>\n        <td>Required. Can\'t be empty. The right text.</td>\n      </tr>\n      <tr>\n        <td><code>color</code></td>\n        <td>\n          Default: <code>lightgrey</code>. The right color. Supports the eight\n          named colors above, as well as hex, rgb, rgba, hsl, hsla and css named\n          colors. This can be overridden by the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>labelColor</code></td>\n        <td>\n          Default: <code>grey</code>. The left color. This can be overridden by\n          the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>isError</code></td>\n        <td>\n          Default: <code>false</code>. <code>true</code> to treat this as an\n          error badge. This prevents the user from overriding the color. In the\n          future, it may affect cache behavior.\n        </td>\n      </tr>\n      <tr>\n        <td><code>namedLogo</code></td>\n        <td>\n          Default: none. One of the named logos supported by Shields or\n          <a href="https://simpleicons.org/">simple-icons</a>. Can be overridden\n          by the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>logoSvg</code></td>\n        <td>Default: none. An SVG string containing a custom logo.</td>\n      </tr>\n      <tr>\n        <td><code>logoColor</code></td>\n        <td>\n          Default: none. Same meaning as the query string. Can be overridden by\n          the query string. Only works for named logos and Shields logos. If you\n          override the color of a multicolor Shield logo, the corresponding\n          named logo will be used and colored.\n        </td>\n      </tr>\n      <tr>\n        <td><code>logoWidth</code></td>\n        <td>\n          Default: none. Same meaning as the query string. Can be overridden by\n          the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>logoPosition</code></td>\n        <td>\n          Default: none. Same meaning as the query string. Can be overridden by\n          the query string.\n        </td>\n      </tr>\n      <tr>\n        <td><code>style</code></td>\n        <td>\n          Default: <code>flat</code>. The default template to use. Can be\n          overridden by the query string.\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>',type:"text/plain"},url:{path:["endpoint"],host:["{{baseUrl}}"],query:[{description:{content:"(Required) The URL to your JSON endpoint",type:"text/plain"},key:"url",value:"<string>"},{description:{content:"One of: flat (default), flat-square, plastic, for-the-badge, social",type:"text/plain"},key:"style",value:"<string>"},{description:{content:'One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or <a href="https://simpleicons.org/" rel="noopener noreferrer" target="_blank">simple-icons</a>. Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the <a href="https://github.com/simple-icons/simple-icons/blob/develop/slugs.md" rel="noopener noreferrer" target="_blank">slugs.md</a> file in the simple-icons repository.',type:"text/plain"},key:"logo",value:"<string>"},{description:{content:"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.",type:"text/plain"},key:"logoColor",value:"<string>"},{description:{content:'Override the default left-hand-side text (<a href="https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding">URL-Encoding</a> needed for spaces or special characters!)',type:"text/plain"},key:"label",value:"<string>"},{description:{content:'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.',type:"text/plain"},key:"labelColor",value:"<string>"},{description:{content:'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.',type:"text/plain"},key:"color",value:"<string>"},{description:{content:'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.',type:"text/plain"},key:"cacheSeconds",value:"<string>"},{description:{content:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",type:"text/plain"},key:"link",value:"<string>"},{description:{content:"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an `<object>` HTML tag, but not an `<img>` tag or a markup language.",type:"text/plain"},key:"link",value:"<string>"}],variable:[]},method:"GET"}},source:"@site/categories/1core.yaml",sourceDirName:".",permalink:"/shields-docusaurus-poc/badges/endpoint-badge",previous:{title:"Dynamic YAML Badge",permalink:"/shields-docusaurus-poc/badges/dynamic-yaml-badge"},next:{title:"AUR last modified",permalink:"/shields-docusaurus-poc/badges/aur-last-modified"}},i=[],s={toc:i};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"endpoint-badge"},"Endpoint Badge"),(0,r.kt)("p",null,"Using the endpoint badge, you can provide content for a badge through a JSON endpoint. The content can be prerendered, or generated on the fly. To strike a balance between responsiveness and bandwidth utilization on one hand, and freshness on the other, cache behavior is configurable, subject to the Shields minimum. The endpoint URL is provided to Shields through the query string. Shields fetches it and formats the badge."),(0,r.kt)("p",null,"The endpoint badge takes a single required query param: ",(0,r.kt)("code",null,"url"),", which is the URL to your JSON endpoint"),(0,r.kt)("div",null,(0,r.kt)("h2",null,"Example JSON Endpoint Response"),(0,r.kt)("code",null,'{ "schemaVersion": 1, "label": "hello", "message": "sweet world", "color": "orange" }'),(0,r.kt)("h2",null,"Example Shields Response"),(0,r.kt)("img",{src:"https://img.shields.io/badge/hello-sweet_world-orange"})),(0,r.kt)("div",null,(0,r.kt)("h2",null,"Schema"),(0,r.kt)("table",null,(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Property"),(0,r.kt)("th",null,"Description")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"schemaVersion")),(0,r.kt)("td",null,"Required. Always the number ",(0,r.kt)("code",null,"1"),".")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"label")),(0,r.kt)("td",null,"Required. The left text, or the empty string to omit the left side of the badge. This can be overridden by the query string.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"message")),(0,r.kt)("td",null,"Required. Can't be empty. The right text.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"color")),(0,r.kt)("td",null,"Default: ",(0,r.kt)("code",null,"lightgrey"),". The right color. Supports the eight named colors above, as well as hex, rgb, rgba, hsl, hsla and css named colors. This can be overridden by the query string.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"labelColor")),(0,r.kt)("td",null,"Default: ",(0,r.kt)("code",null,"grey"),". The left color. This can be overridden by the query string.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"isError")),(0,r.kt)("td",null,"Default: ",(0,r.kt)("code",null,"false"),". ",(0,r.kt)("code",null,"true")," to treat this as an error badge. This prevents the user from overriding the color. In the future, it may affect cache behavior.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"namedLogo")),(0,r.kt)("td",null,"Default: none. One of the named logos supported by Shields or",(0,r.kt)("a",{href:"https://simpleicons.org/"},"simple-icons"),". Can be overridden by the query string.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"logoSvg")),(0,r.kt)("td",null,"Default: none. An SVG string containing a custom logo.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"logoColor")),(0,r.kt)("td",null,"Default: none. Same meaning as the query string. Can be overridden by the query string. Only works for named logos and Shields logos. If you override the color of a multicolor Shield logo, the corresponding named logo will be used and colored.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"logoWidth")),(0,r.kt)("td",null,"Default: none. Same meaning as the query string. Can be overridden by the query string.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"logoPosition")),(0,r.kt)("td",null,"Default: none. Same meaning as the query string. Can be overridden by the query string.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"style")),(0,r.kt)("td",null,"Default: ",(0,r.kt)("code",null,"flat"),". The default template to use. Can be overridden by the query string."))))),(0,r.kt)("table",{style:{display:"table",width:"100%"}},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{style:{textAlign:"left"}},"Query Parameters"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"url"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("span",{style:{opacity:"0.6"}}," \u2014 "),(0,r.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," REQUIRED"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The URL to your JSON endpoint")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: https://shields.redsparr0w.com/2473/monday"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"style"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"One of: flat (default), flat-square, plastic, for-the-badge, social")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: flat"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"logo"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"One of the named logos (bitcoin, dependabot, gitlab, npm, paypal, serverfault, stackexchange, superuser, telegram, travis) or ",(0,r.kt)("a",{href:"https://simpleicons.org/",rel:"noopener noreferrer",target:"_blank"},"simple-icons"),". Simple-icons are referenced using icon slugs which can be found on the simple-icons site or in the ",(0,r.kt)("a",{href:"https://github.com/simple-icons/simple-icons/blob/develop/slugs.md",rel:"noopener noreferrer",target:"_blank"},"slugs.md")," file in the simple-icons repository.")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: appveyor"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"logoColor"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"The color of the logo (hex, rgb, rgba, hsl, hsla and css named colors supported). Supported for named logos and Shields logos but not for custom logos. For multicolor Shields logos, the corresponding named logo will be used and colored.")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: violet"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"label"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Override the default left-hand-side text (",(0,r.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding"},"URL-Encoding")," needed for spaces or special characters!)")),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: healthiness"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"labelColor"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,'Background color of the left part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorA" is also supported.')),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: abcdef"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"color"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,'Background color of the right part (hex, rgb, rgba, hsl, hsla and css named colors supported). The legacy name "colorB" is also supported.')),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: fedcba"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"cacheSeconds"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,'HTTP cache lifetime (rules are applied to infer a default value on a per-badge basis, any values specified below the default will be ignored). The legacy name "maxAge" is also supported.')),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},"Example: 3600"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("code",null,"link"),(0,r.kt)("span",{style:{opacity:"0.6"}}," string[]"),(0,r.kt)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"}},(0,r.kt)("p",null,"Specify what clicking on the left/right of a badge should do. Note that this only works when integrating your badge in an ",(0,r.kt)("inlineCode",{parentName:"p"},"<object>")," HTML tag, but not an ",(0,r.kt)("inlineCode",{parentName:"p"},"<img>")," tag or a markup language.")))))))}c.isMDXComponent=!0}}]);